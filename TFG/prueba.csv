Origen,Resultado,Destino
"M:callgraph.MethodVisitor:<init>(org.apache.bcel.generic.MethodGen,org.apache.bcel.classfile.JavaClass)[6]",void,(O)java.util.ArrayList:<init>()
"M:callgraph.MethodVisitor:<init>(org.apache.bcel.generic.MethodGen,org.apache.bcel.classfile.JavaClass)[6]",void,(O)callgraph.MethodVisitor:argumentList(org.apache.bcel.generic.Type[])
M:callgraph.MethodVisitor:start()[12],java.util.List,(S)java.util.Collections:emptyList()
M:callgraph.MethodVisitor:start()[12],java.util.List,(O)callgraph.MethodVisitor:visitInstruction(org.apache.bcel.generic.Instruction)
M:callgraph.MethodVisitor:start()[12],java.util.List,(I)java.util.List:size()
M:callgraph.MethodVisitor:start()[12],java.util.List,(I)java.util.List:get(int)
M:callgraph.MethodVisitor:start()[12],java.util.List,(I)java.util.List:remove(int)
M:callgraph.MethodVisitor:visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)[1],void,(O)callgraph.MethodVisitor:argumentList(org.apache.bcel.generic.Type[])
M:callgraph.MethodVisitor:visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)[1],void,(I)java.util.List:add(java.lang.Object)
M:callgraph.MethodVisitor:visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)[1],void,(O)callgraph.MethodVisitor:argumentList(org.apache.bcel.generic.Type[])
M:callgraph.MethodVisitor:visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)[1],void,(I)java.util.List:add(java.lang.Object)
M:callgraph.MethodVisitor:visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)[1],void,(O)callgraph.MethodVisitor:argumentList(org.apache.bcel.generic.Type[])
M:callgraph.MethodVisitor:visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)[1],void,(I)java.util.List:add(java.lang.Object)
M:callgraph.MethodVisitor:visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)[1],void,(O)callgraph.MethodVisitor:argumentList(org.apache.bcel.generic.Type[])
M:callgraph.MethodVisitor:visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)[1],void,(I)java.util.List:add(java.lang.Object)
M:callgraph.MethodVisitor:visitINVOKEDYNAMIC(org.apache.bcel.generic.INVOKEDYNAMIC)[3],void,(O)callgraph.MethodVisitor:argumentList(org.apache.bcel.generic.Type[])
M:callgraph.MethodVisitor:visitINVOKEDYNAMIC(org.apache.bcel.generic.INVOKEDYNAMIC)[3],void,(I)java.util.List:add(java.lang.Object)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(S)callgraph.Instrumenter:err(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(S)callgraph.Instrumenter:err(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(S)callgraph.Instrumenter:err(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(S)callgraph.Instrumenter:err(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(S)callgraph.Instrumenter:err(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(S)callgraph.Instrumenter:err(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(S)java.util.regex.Pattern:compile(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(S)callgraph.Instrumenter:err(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(I)java.util.List:add(java.lang.Object)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(I)java.util.List:add(java.lang.Object)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(O)callgraph.Instrumenter:<init>()
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(I)java.util.List:iterator()
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(I)java.util.Iterator:hasNext()
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(I)java.util.Iterator:next()
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(M)java.util.regex.Pattern:matcher(java.lang.CharSequence)
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(M)java.util.regex.Matcher:matches()
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(I)java.util.List:iterator()
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(I)java.util.Iterator:hasNext()
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(I)java.util.Iterator:next()
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(M)java.util.regex.Pattern:matcher(java.lang.CharSequence)
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(M)java.util.regex.Matcher:matches()
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(S)callgraph.Instrumenter:err(java.lang.String)
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],"(O)callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])"
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(S)callgraph.Instrumenter:err(java.lang.String)
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],"(O)callgraph.Instrumenter:enhanceMethod(javassist.CtBehavior,java.lang.String)"
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(S)callgraph.Instrumenter:err(java.lang.String)
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(S)callgraph.Instrumenter:err(java.lang.String)
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(S)callgraph.Instrumenter:err(java.lang.String)
M:callgraph.Instrumenter:<clinit>()[1],void,(O)java.util.ArrayList:<init>()
M:callgraph.Instrumenter:<clinit>()[1],void,(O)java.util.ArrayList:<init>()
M:callgraph.DynamicCallManager:<init>()[1],void,(O)java.util.HashMap:<init>()
"M:callgraph.DynamicCallManager:retrieveCalls(org.apache.bcel.classfile.Method,org.apache.bcel.classfile.JavaClass)[15]",void,(O)callgraph.DynamicCallManager:getBootstrapMethods(org.apache.bcel.classfile.JavaClass)
"M:callgraph.DynamicCallManager:retrieveCalls(org.apache.bcel.classfile.Method,org.apache.bcel.classfile.JavaClass)[15]",void,(M)java.util.regex.Pattern:matcher(java.lang.CharSequence)
"M:callgraph.DynamicCallManager:retrieveCalls(org.apache.bcel.classfile.Method,org.apache.bcel.classfile.JavaClass)[15]",void,(M)java.util.regex.Matcher:find()
"M:callgraph.DynamicCallManager:retrieveCalls(org.apache.bcel.classfile.Method,org.apache.bcel.classfile.JavaClass)[15]",void,(M)java.util.regex.Matcher:group(int)
"M:callgraph.DynamicCallManager:retrieveCalls(org.apache.bcel.classfile.Method,org.apache.bcel.classfile.JavaClass)[15]",void,"(O)callgraph.DynamicCallManager:getMethodNameFromHandleIndex(org.apache.bcel.classfile.ConstantPool,int)"
"M:callgraph.DynamicCallManager:retrieveCalls(org.apache.bcel.classfile.Method,org.apache.bcel.classfile.JavaClass)[15]",void,"(I)java.util.Map:put(java.lang.Object,java.lang.Object)"
M:callgraph.DynamicCallManager:linkCalls(org.apache.bcel.classfile.Method)[10],void,(I)java.util.Map:get(java.lang.Object)
M:callgraph.DynamicCallManager:<clinit>()[2],void,(S)java.util.regex.Pattern:compile(java.lang.String)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(S)java.util.Arrays:toString(java.lang.Object[])
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(O)java.util.jar.JarFile:<init>(java.io.File)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.util.jar.JarFile:entries()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(S)callgraph.JCallGraph:enumerationAsStream(java.util.Enumeration)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(I)java.util.stream.Stream:flatMap(java.util.function.Function)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(I)java.util.stream.Stream:map(java.util.function.Function)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,"(I)java.util.stream.Stream:reduce(java.lang.Object,java.util.function.BiFunction,java.util.function.BinaryOperator)"
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.util.jar.JarFile:close()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.util.jar.JarFile:close()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.util.jar.JarFile:close()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.util.jar.JarFile:close()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(S)callgraph.JCallGraph:createCSV(java.lang.String)
M:callgraph.JCallGraph:enumerationAsStream(java.util.Enumeration)[0],java.util.stream.Stream,(O)callgraph.JCallGraph$1:<init>(java.util.Enumeration)
M:callgraph.JCallGraph:enumerationAsStream(java.util.Enumeration)[0],java.util.stream.Stream,"(S)java.util.Spliterators:spliteratorUnknownSize(java.util.Iterator,int)"
M:callgraph.JCallGraph:enumerationAsStream(java.util.Enumeration)[0],java.util.stream.Stream,"(S)java.util.stream.StreamSupport:stream(java.util.Spliterator,boolean)"
"M:callgraph.JCallGraph:lambda$main$1(java.lang.String[],java.util.function.Function,java.lang.String,java.util.jar.JarEntry)[5]",java.util.stream.Stream,(M)java.util.jar.JarEntry:isDirectory()
"M:callgraph.JCallGraph:lambda$main$1(java.lang.String[],java.util.function.Function,java.lang.String,java.util.jar.JarEntry)[5]",java.util.stream.Stream,(M)java.util.jar.JarEntry:getName()
"M:callgraph.JCallGraph:lambda$main$1(java.lang.String[],java.util.function.Function,java.lang.String,java.util.jar.JarEntry)[5]",java.util.stream.Stream,(O)java.util.ArrayList:<init>()
"M:callgraph.JCallGraph:lambda$main$1(java.lang.String[],java.util.function.Function,java.lang.String,java.util.jar.JarEntry)[5]",java.util.stream.Stream,(M)java.util.ArrayList:stream()
"M:callgraph.JCallGraph:lambda$main$1(java.lang.String[],java.util.function.Function,java.lang.String,java.util.jar.JarEntry)[5]",java.util.stream.Stream,(M)java.util.jar.JarEntry:getName()
"M:callgraph.JCallGraph:lambda$main$1(java.lang.String[],java.util.function.Function,java.lang.String,java.util.jar.JarEntry)[5]",java.util.stream.Stream,(I)java.util.function.Function:apply(java.lang.Object)
"M:callgraph.JCallGraph:lambda$main$1(java.lang.String[],java.util.function.Function,java.lang.String,java.util.jar.JarEntry)[5]",java.util.stream.Stream,(M)callgraph.ClassVisitor:getPackage()
"M:callgraph.JCallGraph:lambda$main$1(java.lang.String[],java.util.function.Function,java.lang.String,java.util.jar.JarEntry)[5]",java.util.stream.Stream,(I)java.util.function.Function:apply(java.lang.Object)
"M:callgraph.JCallGraph:lambda$main$1(java.lang.String[],java.util.function.Function,java.lang.String,java.util.jar.JarEntry)[5]",java.util.stream.Stream,(M)callgraph.ClassVisitor:start()
"M:callgraph.JCallGraph:lambda$main$1(java.lang.String[],java.util.function.Function,java.lang.String,java.util.jar.JarEntry)[5]",java.util.stream.Stream,(M)callgraph.ClassVisitor:methodCalls()
"M:callgraph.JCallGraph:lambda$main$1(java.lang.String[],java.util.function.Function,java.lang.String,java.util.jar.JarEntry)[5]",java.util.stream.Stream,(I)java.util.List:stream()
M:callgraph.JCallGraph:lambda$main$0(org.apache.bcel.classfile.ClassParser)[2],callgraph.ClassVisitor,(O)callgraph.ClassVisitor:<init>(org.apache.bcel.classfile.JavaClass)
M:callgraph.ClassVisitor:<init>(org.apache.bcel.classfile.JavaClass)[6],void,(O)callgraph.DynamicCallManager:<init>()
M:callgraph.ClassVisitor:<init>(org.apache.bcel.classfile.JavaClass)[6],void,(O)java.util.ArrayList:<init>()
M:callgraph.ClassVisitor:visitJavaClass(org.apache.bcel.classfile.JavaClass)[10],void,"(M)callgraph.DynamicCallManager:retrieveCalls(org.apache.bcel.classfile.Method,org.apache.bcel.classfile.JavaClass)"
M:callgraph.ClassVisitor:visitJavaClass(org.apache.bcel.classfile.JavaClass)[10],void,(M)callgraph.DynamicCallManager:linkCalls(org.apache.bcel.classfile.Method)
M:callgraph.ClassVisitor:visitJavaClass(org.apache.bcel.classfile.JavaClass)[10],void,(M)callgraph.DynamicCallManager:getDynamicCallers()
M:callgraph.ClassVisitor:visitMethod(org.apache.bcel.classfile.Method)[3],void,"(O)callgraph.MethodVisitor:<init>(org.apache.bcel.generic.MethodGen,org.apache.bcel.classfile.JavaClass)"
M:callgraph.ClassVisitor:visitMethod(org.apache.bcel.classfile.Method)[3],void,(M)callgraph.MethodVisitor:start()
M:callgraph.ClassVisitor:visitMethod(org.apache.bcel.classfile.Method)[3],void,(I)java.util.List:addAll(java.util.Collection)
M:callgraph.ClassVisitor:start()[1],callgraph.ClassVisitor,(M)callgraph.ClassVisitor:visitJavaClass(org.apache.bcel.classfile.JavaClass)
M:callgraph.JCallGraph$1:next()[0],java.lang.Object,(I)java.util.Enumeration:nextElement()
M:callgraph.JCallGraph$1:hasNext()[0],boolean,(I)java.util.Enumeration:hasMoreElements()

Origen,Destino
M:config.web.PluginPageDefinition:define(org.sonar.api.web.page.Context),"(S)tools.PluginStringManager:getProperty(java.lang.String)
M:config.web.PluginPageDefinition:define(org.sonar.api.web.page.Context)"
"(S)tools.PluginStringManager:getProperty(java.lang.String)
M:configuration.API:values()","(M)configuration.API[]:clone()
M:configuration.API:<clinit>()"
"(M)configuration.API:getCall()
M:configuration.API:<clinit>()","(M)configuration.API:getCall()
M:configuration.ExportConfiguration:<init>(boolean,java.lang.String)"
"(M)configuration.ExportConfiguration:setOutput(java.lang.String)
M:configuration.ExportConfiguration:create(java.lang.String[])","(M)utils.CommandLineManager:parse(java.lang.String[])
M:configuration.ExportConfiguration:create(java.lang.String[])"
"(M)utils.CommandLineManager:hasOption(java.lang.String)
M:configuration.ExportConfiguration:create(java.lang.String[])","(S)utils.StringManager:getProperty(java.lang.String)
M:configuration.ExportConfiguration:create(java.lang.String[])"
"(M)utils.CommandLineManager:getOptionValue(java.lang.String,java.lang.String)
M:configuration.ReportCommandLine$1:<init>()","(M)configuration.ReportCommandLine$1:add(java.lang.Object)
M:configuration.ReportCommandLine$1:<init>()"
"(M)configuration.ReportCommandLine$1:add(java.lang.Object)
M:configuration.ReportCommandLine$1:<init>()","(M)configuration.ReportCommandLine$1:add(java.lang.Object)
M:configuration.ReportCommandLine$2:<init>()"
"(M)configuration.ReportCommandLine$2:add(java.lang.Object)
M:configuration.ReportCommandLine:main(java.lang.String[],java.lang.String[])","(S)configuration.ReportCommandLine:execute(java.lang.String[],java.lang.String[])
M:configuration.ReportCommandLine:execute(java.lang.String[],java.lang.String[])"
"(M)configuration.ReportConfiguration:create(java.lang.String[])
M:configuration.ReportCommandLine:execute(java.lang.String[],java.lang.String[])","(M)configuration.ExportConfiguration:create(java.lang.String[])
M:configuration.ReportCommandLine:execute(java.lang.String[],java.lang.String[])"
"(S)configuration.SonarRequestList:getSonarRequestList()
M:configuration.ReportCommandLine:execute(java.lang.String[],java.lang.String[])","(M)configuration.SonarRequestList:setExportConfiguration(configuration.ExportConfiguration)
M:configuration.ReportCommandLine:execute(java.lang.String[],java.lang.String[])"
"(M)configuration.SonarRequestList:execute(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)
M:configuration.ReportConfiguration:create(java.lang.String[])","(M)utils.CommandLineManager:parse(java.lang.String[])
M:configuration.ReportConfiguration:create(java.lang.String[])"
"(M)utils.CommandLineManager:getOptionValue(java.lang.String,java.lang.String)
M:configuration.ReportConfiguration:create(java.lang.String[])","(S)utils.StringManager:getProperty(java.lang.String)
M:configuration.ReportConfiguration:create(java.lang.String[])"
"(M)utils.CommandLineManager:getOptionValue(java.lang.String,java.lang.String)
M:configuration.ReportConfiguration:create(java.lang.String[])","(M)utils.CommandLineManager:getOptionValue(java.lang.String,java.lang.String)
M:configuration.ReportConfiguration:create(java.lang.String[])"
"(S)utils.StringManager:getProperty(java.lang.String)
M:configuration.ReportConfiguration:create(java.lang.String[])","(M)utils.CommandLineManager:getOptionValue(java.lang.String,java.lang.String)
M:configuration.ReportConfiguration:create(java.lang.String[])"
"(M)utils.CommandLineManager:getOptionValue(java.lang.String,java.lang.String)
M:configuration.ReportConfiguration:create(java.lang.String[])","(M)utils.CommandLineManager:getOptionValue(java.lang.String,java.lang.String)
M:configuration.SonarRequestList:execute(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)"
"(S)configuration.SonarQubeServer:getSonarQubeServer()
M:configuration.SonarRequestList:execute(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)","(M)configuration.SonarQubeServer:init(java.lang.String,boolean,int,int,int,int,boolean)
M:configuration.SonarRequestList:execute(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)"

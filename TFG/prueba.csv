Origen,Resultado,Destino
M:config.web.PluginPageDefinition:define(org.sonar.api.web.page.Context)[4],void,(S)tools.PluginStringManager:getProperty(java.lang.String)
"M:configuration.ExportConfiguration:<init>(boolean,java.lang.String)[4]",void,(M)configuration.ExportConfiguration:setOutput(java.lang.String)
M:configuration.ExportConfiguration:create(java.lang.String[])[5],configuration.ExportConfiguration,(M)utils.CommandLineManager:parse(java.lang.String[])
M:configuration.ExportConfiguration:create(java.lang.String[])[5],configuration.ExportConfiguration,(M)utils.CommandLineManager:hasOption(java.lang.String)
M:configuration.ExportConfiguration:create(java.lang.String[])[5],configuration.ExportConfiguration,(S)utils.StringManager:getProperty(java.lang.String)
M:configuration.ExportConfiguration:create(java.lang.String[])[5],configuration.ExportConfiguration,"(M)utils.CommandLineManager:getOptionValue(java.lang.String,java.lang.String)"
M:configuration.ReportCommandLine$1:<init>()[4],void,(M)configuration.ReportCommandLine$1:add(java.lang.Object)
M:configuration.ReportCommandLine$2:<init>()[2],void,(M)configuration.ReportCommandLine$2:add(java.lang.Object)
"M:configuration.ReportCommandLine:main(java.lang.String[][],java.lang.String[])[5]",void,"(S)configuration.ReportCommandLine:execute(java.lang.String[][],java.lang.String[])"
"M:configuration.ReportCommandLine:execute(java.lang.String[][],java.lang.String[])[14]",void,(M)configuration.ReportConfiguration:create(java.lang.String[])
"M:configuration.ReportCommandLine:execute(java.lang.String[][],java.lang.String[])[14]",void,(M)configuration.ExportConfiguration:create(java.lang.String[])
"M:configuration.ReportCommandLine:execute(java.lang.String[][],java.lang.String[])[14]",void,(S)configuration.SonarRequestList:getSonarRequestList()
"M:configuration.ReportCommandLine:execute(java.lang.String[][],java.lang.String[])[14]",void,(M)configuration.SonarRequestList:setExportConfiguration(configuration.ExportConfiguration)
"M:configuration.ReportCommandLine:execute(java.lang.String[][],java.lang.String[])[14]",void,"(M)configuration.SonarRequestList:execute(java.util.List,java.util.List,java.util.List)"
M:configuration.ReportConfiguration:create(java.lang.String[])[9],configuration.ReportConfiguration,(M)utils.CommandLineManager:parse(java.lang.String[])
M:configuration.ReportConfiguration:create(java.lang.String[])[9],configuration.ReportConfiguration,(S)utils.StringManager:getProperty(java.lang.String)
M:configuration.ReportConfiguration:create(java.lang.String[])[9],configuration.ReportConfiguration,"(M)utils.CommandLineManager:getOptionValue(java.lang.String,java.lang.String)"
"M:configuration.SonarRequestList:execute(java.util.List,java.util.List,java.util.List)[15]",void,(S)configuration.SonarQubeServer:getSonarQubeServer()
"M:configuration.SonarRequestList:execute(java.util.List,java.util.List,java.util.List)[15]",void,(S)utils.StringManager:getProperty(java.lang.String)
"M:configuration.SonarRequestList:execute(java.util.List,java.util.List,java.util.List)[15]",void,(S)tools.PluginStringManager:getProperty(java.lang.String)
"M:configuration.SonarRequestList:execute(java.util.List,java.util.List,java.util.List)[15]",void,"(M)configuration.SonarQubeServer:init(java.lang.String,boolean,int,int,int,int,boolean)"
"M:configuration.SonarRequestList:execute(java.util.List,java.util.List,java.util.List)[15]",void,(M)factories.ReportModelFactory:create()
"M:configuration.SonarRequestList:execute(java.util.List,java.util.List,java.util.List)[15]",void,(M)factories.ReportFactory:createFiles(java.util.List)
"M:exporters.CSVExporter:createFiles(java.util.List,java.lang.String)[23]",java.io.File,(M)configuration.ExportConfiguration:getOutput()
"M:exporters.CSVExporter:createFiles(java.util.List,java.lang.String)[23]",java.io.File,(M)models.Report:getProjectName()
"M:exporters.CSVExporter:createFiles(java.util.List,java.lang.String)[23]",java.io.File,(M)models.Report:getProjectAuthor()
"M:exporters.CSVExporter:createFiles(java.util.List,java.lang.String)[23]",java.io.File,(M)models.Report:getProjectDate()
"M:exporters.CSVExporter:createFiles(java.util.List,java.lang.String)[23]",java.io.File,(M)models.Report:getBranch()
"M:exporters.CSVExporter:createFiles(java.util.List,java.lang.String)[23]",java.io.File,(M)models.Report:getComponentKey()
"M:exporters.CSVExporter:createFiles(java.util.List,java.lang.String)[23]",java.io.File,(M)models.Report:getLanguageList()
"M:exporters.CSVExporter:createFiles(java.util.List,java.lang.String)[23]",java.io.File,(M)models.Report:getMetricList()
"M:exporters.CSVExporter:createMeasureReport(java.util.List,java.lang.String)[34]",void,(M)models.Report:getMeasureList()
"M:exporters.CSVExporter:createMeasureReport(java.util.List,java.lang.String)[34]",void,(M)models.Measure:getValue()
"M:exporters.CSVExporter:createMeasureReport(java.util.List,java.lang.String)[34]",void,(M)models.Measure:getKey()
"M:exporters.CSVExporter:createMeasureReport(java.util.List,java.lang.String)[34]",void,(M)exporters.CSVExporter:addToList(models.Measure)
M:exporters.CSVExporter:addToList(models.Measure)[3],void,(M)models.Measure:getKey()
M:exporters.CSVExporter:addToList(models.Measure)[3],void,(M)models.Measure:getValue()
M:factories.ReportFactory:createFiles(java.util.List)[4],void,(M)configuration.ExportConfiguration:isEnableCSV()
M:factories.ReportFactory:createFiles(java.util.List)[4],void,(M)configuration.ExportConfiguration:getOutput()
M:factories.ReportFactory:createFiles(java.util.List)[4],void,"(S)factories.ReportFactory:formatFilename(java.lang.String,java.lang.String,java.lang.String)"
M:factories.ReportFactory:createFiles(java.util.List)[4],void,"(M)exporters.CSVExporter:createFiles(java.util.List,java.lang.String)"
"M:factories.ReportFactory:formatFilename(java.lang.String,java.lang.String,java.lang.String)[4]",java.lang.String,(S)utils.StringManager:getProperty(java.lang.String)
M:factories.ReportModelFactory:create()[12],models.Report,(S)configuration.SonarRequestList:getSonarRequestList()
M:factories.ReportModelFactory:create()[12],models.Report,(M)factories.ProviderFactory:create(java.lang.Class)
M:factories.ReportModelFactory:create()[12],models.Report,(M)providers.LanguageList:createLanguageList()
M:factories.ReportModelFactory:create()[12],models.Report,(M)models.Report:setLanguageList(java.util.List)
M:factories.ReportModelFactory:create()[12],models.Report,(M)configuration.SonarRequestList:getIssueFilter()
M:factories.ReportModelFactory:create()[12],models.Report,(M)providers.IssueList:createIssueList(java.util.List)
M:factories.ReportModelFactory:create()[12],models.Report,(M)models.Report:setIssueList(java.util.List)
M:factories.ReportModelFactory:create()[12],models.Report,(M)configuration.SonarRequestList:getMetricFilter()
M:factories.ReportModelFactory:create()[12],models.Report,(M)providers.MetricList:createMetricList(java.util.ArrayList)
M:factories.ReportModelFactory:create()[12],models.Report,(M)models.Report:setMetricList(java.util.List)
M:factories.ReportModelFactory:create()[12],models.Report,(M)providers.MetricList:getIdsAsString()
M:factories.ReportModelFactory:create()[12],models.Report,(M)providers.MeasureList:setMetricFilterList(java.lang.String)
M:factories.ReportModelFactory:create()[12],models.Report,(M)providers.MeasureList:createMeasureList()
M:factories.ReportModelFactory:create()[12],models.Report,(M)models.Report:setMeasureList(java.util.List)
M:models.Report:<init>(configuration.ReportConfiguration)[6],void,(M)configuration.ReportConfiguration:getProject()
M:models.Report:<init>(configuration.ReportConfiguration)[6],void,(M)configuration.ReportConfiguration:getAuthor()
M:models.Report:<init>(configuration.ReportConfiguration)[6],void,(M)configuration.ReportConfiguration:getVersion()
M:models.Report:<init>(configuration.ReportConfiguration)[6],void,(M)configuration.ReportConfiguration:getBranch()
M:models.Report:<init>(configuration.ReportConfiguration)[6],void,(M)configuration.ReportConfiguration:getComponentKey()
M:providers.AbstractProvider:<init>(configuration.ReportConfiguration)[4],void,(S)configuration.API:getAPI()
M:providers.AbstractProvider:request(java.lang.String)[12],com.google.gson.JsonObject,(M)providers.AbstractProvider:stringRequest(java.lang.String)
M:providers.AbstractProvider:request(java.lang.String)[12],com.google.gson.JsonObject,(M)providers.AbstractProvider:getGson()
M:providers.AbstractProvider:stringRequest(java.lang.String)[2],java.lang.String,(S)providers.RequestManager:getInstance()
M:providers.AbstractProvider:stringRequest(java.lang.String)[2],java.lang.String,(M)providers.RequestManager:get(java.lang.String)
M:providers.ComponentList:createComponentList()[3],java.util.List,(M)configuration.API:getRequest(java.lang.String)
M:providers.ComponentList:createComponentList()[3],java.util.List,(S)configuration.SonarQubeServer:getSonarQubeServer()
M:providers.ComponentList:createComponentList()[3],java.util.List,(M)configuration.SonarQubeServer:getUrl()
M:providers.ComponentList:createComponentList()[3],java.util.List,(M)configuration.ReportConfiguration:getComponentKey()
M:providers.ComponentList:createComponentList()[3],java.util.List,(M)providers.ComponentList:request(java.lang.String)
M:providers.ComponentList:createComponentList()[3],java.util.List,(M)providers.ComponentList:getGson()
M:providers.IssueList:createIssueList(java.util.List)[7],java.util.List,(M)configuration.API:getRequest(java.lang.String)
M:providers.IssueList:createIssueList(java.util.List)[7],java.util.List,(S)configuration.SonarQubeServer:getSonarQubeServer()
M:providers.IssueList:createIssueList(java.util.List)[7],java.util.List,(M)configuration.SonarQubeServer:getUrl()
M:providers.IssueList:createIssueList(java.util.List)[7],java.util.List,(M)configuration.ReportConfiguration:getComponentKey()
M:providers.IssueList:createIssueList(java.util.List)[7],java.util.List,(M)providers.IssueList:request(java.lang.String)
M:providers.IssueList:createIssueList(java.util.List)[7],java.util.List,(M)providers.IssueList:getGson()
M:providers.IssueList:toString()[4],java.lang.String,(M)models.Issue:getKey()
M:providers.IssueList:toString()[4],java.lang.String,(M)models.Issue:getMetric()
M:providers.IssueList:toString()[4],java.lang.String,(M)models.Issue:getMessage()
M:providers.LanguageList:createLanguageList()[3],java.util.List,(M)configuration.API:getRequest(java.lang.String)
M:providers.LanguageList:createLanguageList()[3],java.util.List,(S)configuration.SonarQubeServer:getSonarQubeServer()
M:providers.LanguageList:createLanguageList()[3],java.util.List,(M)configuration.SonarQubeServer:getUrl()
M:providers.LanguageList:createLanguageList()[3],java.util.List,(M)providers.LanguageList:request(java.lang.String)
M:providers.LanguageList:createLanguageList()[3],java.util.List,(M)providers.LanguageList:getGson()
M:providers.LanguageList:toString()[4],java.lang.String,(M)models.Language:getName()
M:providers.MeasureList:createMeasureList()[5],java.util.List,(M)configuration.API:getRequest(java.lang.String)
M:providers.MeasureList:createMeasureList()[5],java.util.List,(S)configuration.SonarQubeServer:getSonarQubeServer()
M:providers.MeasureList:createMeasureList()[5],java.util.List,(M)configuration.SonarQubeServer:getUrl()
M:providers.MeasureList:createMeasureList()[5],java.util.List,(M)configuration.ReportConfiguration:getComponentKey()
M:providers.MeasureList:createMeasureList()[5],java.util.List,(M)providers.MeasureList:request(java.lang.String)
M:providers.MeasureList:createMeasureList()[5],java.util.List,(M)providers.MeasureList:getGson()
M:providers.MetricList:createMetricList(java.util.ArrayList)[3],java.util.List,(M)configuration.API:getRequest(java.lang.String)
M:providers.MetricList:createMetricList(java.util.ArrayList)[3],java.util.List,(S)configuration.SonarQubeServer:getSonarQubeServer()
M:providers.MetricList:createMetricList(java.util.ArrayList)[3],java.util.List,(M)configuration.SonarQubeServer:getUrl()
M:providers.MetricList:createMetricList(java.util.ArrayList)[3],java.util.List,(M)providers.MetricList:request(java.lang.String)
M:providers.MetricList:createMetricList(java.util.ArrayList)[3],java.util.List,(M)providers.MetricList:getGson()
M:providers.MetricList:getIdsAsString()[6],java.lang.String,(M)models.Metric:getKey()
M:providers.RequestManager:extractBaseUrl(java.lang.String)[6],java.lang.String,"(S)providers.RequestManager:substringBeforeLast(java.lang.String,java.lang.String)"
"M:providers.RequestManager:substringBeforeLast(java.lang.String,java.lang.String)[5]",java.lang.String,(S)providers.RequestManager:isEmpty(java.lang.String)
M:providers.RequestManager:get(java.lang.String)[35],java.lang.String,(S)providers.RequestManager:extractBaseUrl(java.lang.String)
M:tools.FileTools:deleteFolder(java.io.File)[13],void,(S)tools.FileTools:deleteFolder(java.io.File)
M:utils.CommandLineManager:getOptionValue(java.lang.String)[0],java.lang.String,"(M)utils.CommandLineManager:getOptionValue(java.lang.String,java.lang.String)"
M:utils.StringManager:changeLocale(java.lang.String)[7],void,"(S)utils.StringManager:changeLocale(java.lang.String,java.lang.String)"
M:view.Main:main(java.lang.String[])[3],void,"(S)configuration.ReportCommandLine:execute(java.lang.String[][],java.lang.String[])"
"M:ws.ExportTask:handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)[25]",void,(S)tools.PluginStringManager:getProperty(java.lang.String)
"M:ws.ExportTask:handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)[25]",void,"(S)configuration.ReportCommandLine:execute(java.lang.String[][],java.lang.String[])"
"M:ws.ExportTask:handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)[25]",void,"(S)factories.ReportFactory:formatFilename(java.lang.String,java.lang.String,java.lang.String)"
"M:ws.ExportTask:handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)[25]",void,"(S)tools.ZipFolder:pack(java.lang.String,java.lang.String)"
M:ws.ReportWs:define(org.sonar.api.server.ws.WebService$Context)[5],void,(S)tools.PluginStringManager:getProperty(java.lang.String)
M:ws.ReportWs:reportAction(org.sonar.api.server.ws.WebService$NewController)[18],void,(S)tools.PluginStringManager:getProperty(java.lang.String)
M:ws.ReportWs:define(java.lang.Object)[0],void,(M)ws.ReportWs:define(org.sonar.api.server.ws.WebService$Context)
M:ws.web.ReportPluginPageDefinition:define(org.sonar.api.web.page.Context)[4],void,(S)tools.PluginStringManager:getProperty(java.lang.String)

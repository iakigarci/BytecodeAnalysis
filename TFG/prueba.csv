Origen,Resultado,Destino
"M:callgraph.MethodVisitor:<init>(org.apache.bcel.generic.MethodGen,org.apache.bcel.classfile.JavaClass)[6]",void,(O)org.apache.bcel.generic.EmptyVisitor:<init>()
"M:callgraph.MethodVisitor:<init>(org.apache.bcel.generic.MethodGen,org.apache.bcel.classfile.JavaClass)[6]",void,(O)java.util.ArrayList:<init>()
"M:callgraph.MethodVisitor:<init>(org.apache.bcel.generic.MethodGen,org.apache.bcel.classfile.JavaClass)[6]",void,(M)org.apache.bcel.generic.MethodGen:getConstantPool()
"M:callgraph.MethodVisitor:<init>(org.apache.bcel.generic.MethodGen,org.apache.bcel.classfile.JavaClass)[6]",void,(O)java.lang.StringBuilder:<init>()
"M:callgraph.MethodVisitor:<init>(org.apache.bcel.generic.MethodGen,org.apache.bcel.classfile.JavaClass)[6]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.MethodVisitor:<init>(org.apache.bcel.generic.MethodGen,org.apache.bcel.classfile.JavaClass)[6]",void,(M)org.apache.bcel.classfile.JavaClass:getClassName()
"M:callgraph.MethodVisitor:<init>(org.apache.bcel.generic.MethodGen,org.apache.bcel.classfile.JavaClass)[6]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.MethodVisitor:<init>(org.apache.bcel.generic.MethodGen,org.apache.bcel.classfile.JavaClass)[6]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.MethodVisitor:<init>(org.apache.bcel.generic.MethodGen,org.apache.bcel.classfile.JavaClass)[6]",void,(M)org.apache.bcel.generic.MethodGen:getName()
"M:callgraph.MethodVisitor:<init>(org.apache.bcel.generic.MethodGen,org.apache.bcel.classfile.JavaClass)[6]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.MethodVisitor:<init>(org.apache.bcel.generic.MethodGen,org.apache.bcel.classfile.JavaClass)[6]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.MethodVisitor:<init>(org.apache.bcel.generic.MethodGen,org.apache.bcel.classfile.JavaClass)[6]",void,(M)org.apache.bcel.generic.MethodGen:getArgumentTypes()
"M:callgraph.MethodVisitor:<init>(org.apache.bcel.generic.MethodGen,org.apache.bcel.classfile.JavaClass)[6]",void,(O)callgraph.MethodVisitor:argumentList(org.apache.bcel.generic.Type[])
"M:callgraph.MethodVisitor:<init>(org.apache.bcel.generic.MethodGen,org.apache.bcel.classfile.JavaClass)[6]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.MethodVisitor:<init>(org.apache.bcel.generic.MethodGen,org.apache.bcel.classfile.JavaClass)[6]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.MethodVisitor:<init>(org.apache.bcel.generic.MethodGen,org.apache.bcel.classfile.JavaClass)[6]",void,(M)java.lang.StringBuilder:toString()
M:callgraph.MethodVisitor:argumentList(org.apache.bcel.generic.Type[])[6],java.lang.String,(O)java.lang.StringBuilder:<init>()
M:callgraph.MethodVisitor:argumentList(org.apache.bcel.generic.Type[])[6],java.lang.String,(M)java.lang.StringBuilder:append(java.lang.String)
M:callgraph.MethodVisitor:argumentList(org.apache.bcel.generic.Type[])[6],java.lang.String,(M)org.apache.bcel.generic.Type:toString()
M:callgraph.MethodVisitor:argumentList(org.apache.bcel.generic.Type[])[6],java.lang.String,(M)java.lang.StringBuilder:append(java.lang.String)
M:callgraph.MethodVisitor:argumentList(org.apache.bcel.generic.Type[])[6],java.lang.String,(M)java.lang.StringBuilder:toString()
M:callgraph.MethodVisitor:start()[12],java.util.List,(M)org.apache.bcel.generic.MethodGen:isAbstract()
M:callgraph.MethodVisitor:start()[12],java.util.List,(M)org.apache.bcel.generic.MethodGen:isNative()
M:callgraph.MethodVisitor:start()[12],java.util.List,(S)java.util.Collections:emptyList()
M:callgraph.MethodVisitor:start()[12],java.util.List,(M)org.apache.bcel.generic.MethodGen:getInstructionList()
M:callgraph.MethodVisitor:start()[12],java.util.List,(M)org.apache.bcel.generic.InstructionList:getStart()
M:callgraph.MethodVisitor:start()[12],java.util.List,(M)org.apache.bcel.generic.InstructionHandle:getInstruction()
M:callgraph.MethodVisitor:start()[12],java.util.List,(O)callgraph.MethodVisitor:visitInstruction(org.apache.bcel.generic.Instruction)
M:callgraph.MethodVisitor:start()[12],java.util.List,(M)org.apache.bcel.generic.Instruction:accept(org.apache.bcel.generic.Visitor)
M:callgraph.MethodVisitor:start()[12],java.util.List,(M)org.apache.bcel.generic.InstructionHandle:getNext()
M:callgraph.MethodVisitor:start()[12],java.util.List,(I)java.util.List:size()
M:callgraph.MethodVisitor:start()[12],java.util.List,(I)java.util.List:get(int)
M:callgraph.MethodVisitor:start()[12],java.util.List,(M)java.lang.String:contains(java.lang.CharSequence)
M:callgraph.MethodVisitor:start()[12],java.util.List,(I)java.util.List:remove(int)
M:callgraph.MethodVisitor:visitInstruction(org.apache.bcel.generic.Instruction)[1],boolean,(M)org.apache.bcel.generic.Instruction:getOpcode()
M:callgraph.MethodVisitor:visitInstruction(org.apache.bcel.generic.Instruction)[1],boolean,(S)org.apache.bcel.generic.InstructionConst:getInstruction(int)
M:callgraph.MethodVisitor:visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)[1],void,(M)org.apache.bcel.generic.INVOKEVIRTUAL:getReferenceType(org.apache.bcel.generic.ConstantPoolGen)
M:callgraph.MethodVisitor:visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)[1],void,(M)org.apache.bcel.generic.INVOKEVIRTUAL:getMethodName(org.apache.bcel.generic.ConstantPoolGen)
M:callgraph.MethodVisitor:visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)[1],void,(M)org.apache.bcel.generic.INVOKEVIRTUAL:getArgumentTypes(org.apache.bcel.generic.ConstantPoolGen)
M:callgraph.MethodVisitor:visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)[1],void,(O)callgraph.MethodVisitor:argumentList(org.apache.bcel.generic.Type[])
M:callgraph.MethodVisitor:visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)[1],void,"(S)java.lang.String:format(java.lang.String,java.lang.Object[])"
M:callgraph.MethodVisitor:visitINVOKEVIRTUAL(org.apache.bcel.generic.INVOKEVIRTUAL)[1],void,(I)java.util.List:add(java.lang.Object)
M:callgraph.MethodVisitor:visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)[1],void,(M)org.apache.bcel.generic.INVOKEINTERFACE:getReferenceType(org.apache.bcel.generic.ConstantPoolGen)
M:callgraph.MethodVisitor:visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)[1],void,(M)org.apache.bcel.generic.INVOKEINTERFACE:getMethodName(org.apache.bcel.generic.ConstantPoolGen)
M:callgraph.MethodVisitor:visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)[1],void,(M)org.apache.bcel.generic.INVOKEINTERFACE:getArgumentTypes(org.apache.bcel.generic.ConstantPoolGen)
M:callgraph.MethodVisitor:visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)[1],void,(O)callgraph.MethodVisitor:argumentList(org.apache.bcel.generic.Type[])
M:callgraph.MethodVisitor:visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)[1],void,"(S)java.lang.String:format(java.lang.String,java.lang.Object[])"
M:callgraph.MethodVisitor:visitINVOKEINTERFACE(org.apache.bcel.generic.INVOKEINTERFACE)[1],void,(I)java.util.List:add(java.lang.Object)
M:callgraph.MethodVisitor:visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)[1],void,(M)org.apache.bcel.generic.INVOKESPECIAL:getReferenceType(org.apache.bcel.generic.ConstantPoolGen)
M:callgraph.MethodVisitor:visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)[1],void,(M)org.apache.bcel.generic.INVOKESPECIAL:getMethodName(org.apache.bcel.generic.ConstantPoolGen)
M:callgraph.MethodVisitor:visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)[1],void,(M)org.apache.bcel.generic.INVOKESPECIAL:getArgumentTypes(org.apache.bcel.generic.ConstantPoolGen)
M:callgraph.MethodVisitor:visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)[1],void,(O)callgraph.MethodVisitor:argumentList(org.apache.bcel.generic.Type[])
M:callgraph.MethodVisitor:visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)[1],void,"(S)java.lang.String:format(java.lang.String,java.lang.Object[])"
M:callgraph.MethodVisitor:visitINVOKESPECIAL(org.apache.bcel.generic.INVOKESPECIAL)[1],void,(I)java.util.List:add(java.lang.Object)
M:callgraph.MethodVisitor:visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)[1],void,(M)org.apache.bcel.generic.INVOKESTATIC:getReferenceType(org.apache.bcel.generic.ConstantPoolGen)
M:callgraph.MethodVisitor:visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)[1],void,(M)org.apache.bcel.generic.INVOKESTATIC:getMethodName(org.apache.bcel.generic.ConstantPoolGen)
M:callgraph.MethodVisitor:visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)[1],void,(M)org.apache.bcel.generic.INVOKESTATIC:getArgumentTypes(org.apache.bcel.generic.ConstantPoolGen)
M:callgraph.MethodVisitor:visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)[1],void,(O)callgraph.MethodVisitor:argumentList(org.apache.bcel.generic.Type[])
M:callgraph.MethodVisitor:visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)[1],void,"(S)java.lang.String:format(java.lang.String,java.lang.Object[])"
M:callgraph.MethodVisitor:visitINVOKESTATIC(org.apache.bcel.generic.INVOKESTATIC)[1],void,(I)java.util.List:add(java.lang.Object)
M:callgraph.MethodVisitor:visitINVOKEDYNAMIC(org.apache.bcel.generic.INVOKEDYNAMIC)[3],void,(M)org.apache.bcel.generic.INVOKEDYNAMIC:getType(org.apache.bcel.generic.ConstantPoolGen)
M:callgraph.MethodVisitor:visitINVOKEDYNAMIC(org.apache.bcel.generic.INVOKEDYNAMIC)[3],void,(M)org.apache.bcel.generic.INVOKEDYNAMIC:getMethodName(org.apache.bcel.generic.ConstantPoolGen)
M:callgraph.MethodVisitor:visitINVOKEDYNAMIC(org.apache.bcel.generic.INVOKEDYNAMIC)[3],void,(M)org.apache.bcel.generic.INVOKEDYNAMIC:getArgumentTypes(org.apache.bcel.generic.ConstantPoolGen)
M:callgraph.MethodVisitor:visitINVOKEDYNAMIC(org.apache.bcel.generic.INVOKEDYNAMIC)[3],void,(O)callgraph.MethodVisitor:argumentList(org.apache.bcel.generic.Type[])
M:callgraph.MethodVisitor:visitINVOKEDYNAMIC(org.apache.bcel.generic.INVOKEDYNAMIC)[3],void,"(S)java.lang.String:format(java.lang.String,java.lang.Object[])"
M:callgraph.MethodVisitor:visitINVOKEDYNAMIC(org.apache.bcel.generic.INVOKEDYNAMIC)[3],void,(I)java.util.List:add(java.lang.Object)
M:callgraph.Instrumenter:<init>()[0],void,(O)java.lang.Object:<init>()
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(S)callgraph.Instrumenter:err(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(O)java.lang.StringBuilder:<init>()
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.StringBuilder:toString()
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(S)callgraph.Instrumenter:err(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.String:split(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(S)callgraph.Instrumenter:err(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.String:split(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(O)java.lang.StringBuilder:<init>()
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.StringBuilder:toString()
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(S)callgraph.Instrumenter:err(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.String:equals(java.lang.Object)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.String:equals(java.lang.Object)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(O)java.lang.StringBuilder:<init>()
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.StringBuilder:toString()
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(S)callgraph.Instrumenter:err(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.String:split(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(O)java.lang.StringBuilder:<init>()
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.StringBuilder:toString()
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(S)callgraph.Instrumenter:err(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(O)java.lang.StringBuilder:<init>()
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.StringBuilder:toString()
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(S)java.util.regex.Pattern:compile(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(O)java.lang.StringBuilder:<init>()
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.StringBuilder:toString()
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(S)callgraph.Instrumenter:err(java.lang.String)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(M)java.lang.String:equals(java.lang.Object)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(I)java.util.List:add(java.lang.Object)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(I)java.util.List:add(java.lang.Object)
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(O)callgraph.Instrumenter:<init>()
"M:callgraph.Instrumenter:premain(java.lang.String,java.lang.instrument.Instrumentation)[31]",void,(I)java.lang.instrument.Instrumentation:addTransformer(java.lang.instrument.ClassFileTransformer)
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],"(M)java.lang.String:replace(java.lang.CharSequence,java.lang.CharSequence)"
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(I)java.util.List:iterator()
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(I)java.util.Iterator:hasNext()
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(I)java.util.Iterator:next()
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(M)java.util.regex.Pattern:matcher(java.lang.CharSequence)
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(M)java.util.regex.Matcher:matches()
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(I)java.util.List:iterator()
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(I)java.util.Iterator:hasNext()
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(I)java.util.Iterator:next()
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(M)java.util.regex.Pattern:matcher(java.lang.CharSequence)
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(M)java.util.regex.Matcher:matches()
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(O)java.lang.StringBuilder:<init>()
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(M)java.lang.StringBuilder:toString()
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],(S)callgraph.Instrumenter:err(java.lang.String)
"M:callgraph.Instrumenter:transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])[17]",byte[],"(O)callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])"
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(S)javassist.ClassPool:getDefault()
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(O)java.io.ByteArrayInputStream:<init>(byte[])
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)javassist.ClassPool:makeClass(java.io.InputStream)
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)javassist.CtClass:isInterface()
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(O)java.lang.StringBuilder:<init>()
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)java.lang.StringBuilder:toString()
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(S)callgraph.Instrumenter:err(java.lang.String)
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)javassist.CtClass:getDeclaredBehaviors()
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)javassist.CtBehavior:isEmpty()
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)javassist.CtClass:getName()
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],"(O)callgraph.Instrumenter:enhanceMethod(javassist.CtBehavior,java.lang.String)"
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)javassist.CtClass:toBytecode()
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)javassist.CtClass:detach()
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)javassist.CannotCompileException:printStackTrace()
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(O)java.lang.StringBuilder:<init>()
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)javassist.CannotCompileException:getMessage()
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)java.lang.StringBuilder:toString()
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(S)callgraph.Instrumenter:err(java.lang.String)
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)javassist.CtClass:detach()
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)javassist.NotFoundException:printStackTrace()
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(O)java.lang.StringBuilder:<init>()
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)javassist.NotFoundException:getMessage()
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)java.lang.StringBuilder:toString()
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(S)callgraph.Instrumenter:err(java.lang.String)
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)javassist.CtClass:detach()
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(O)java.lang.StringBuilder:<init>()
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)java.io.IOException:getMessage()
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)java.lang.StringBuilder:toString()
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(S)callgraph.Instrumenter:err(java.lang.String)
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)javassist.CtClass:detach()
"M:callgraph.Instrumenter:enhanceClass(java.lang.String,byte[])[30]",byte[],(M)javassist.CtClass:detach()
"M:callgraph.Instrumenter:enhanceMethod(javassist.CtBehavior,java.lang.String)[6]",void,(M)java.lang.String:lastIndexOf(int)
"M:callgraph.Instrumenter:enhanceMethod(javassist.CtBehavior,java.lang.String)[6]",void,(M)java.lang.String:length()
"M:callgraph.Instrumenter:enhanceMethod(javassist.CtBehavior,java.lang.String)[6]",void,"(M)java.lang.String:substring(int,int)"
"M:callgraph.Instrumenter:enhanceMethod(javassist.CtBehavior,java.lang.String)[6]",void,(M)javassist.CtBehavior:getName()
"M:callgraph.Instrumenter:enhanceMethod(javassist.CtBehavior,java.lang.String)[6]",void,(M)javassist.CtBehavior:getName()
"M:callgraph.Instrumenter:enhanceMethod(javassist.CtBehavior,java.lang.String)[6]",void,(M)java.lang.String:equals(java.lang.Object)
"M:callgraph.Instrumenter:enhanceMethod(javassist.CtBehavior,java.lang.String)[6]",void,(O)java.lang.StringBuilder:<init>()
"M:callgraph.Instrumenter:enhanceMethod(javassist.CtBehavior,java.lang.String)[6]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:enhanceMethod(javassist.CtBehavior,java.lang.String)[6]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:enhanceMethod(javassist.CtBehavior,java.lang.String)[6]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:enhanceMethod(javassist.CtBehavior,java.lang.String)[6]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:enhanceMethod(javassist.CtBehavior,java.lang.String)[6]",void,(M)java.lang.StringBuilder:append(java.lang.String)
"M:callgraph.Instrumenter:enhanceMethod(javassist.CtBehavior,java.lang.String)[6]",void,(M)java.lang.StringBuilder:toString()
"M:callgraph.Instrumenter:enhanceMethod(javassist.CtBehavior,java.lang.String)[6]",void,(M)javassist.CtBehavior:insertBefore(java.lang.String)
"M:callgraph.Instrumenter:enhanceMethod(javassist.CtBehavior,java.lang.String)[6]",void,(M)javassist.CtBehavior:insertAfter(java.lang.String)
M:callgraph.Instrumenter:<clinit>()[1],void,(O)java.util.ArrayList:<init>()
M:callgraph.Instrumenter:<clinit>()[1],void,(O)java.util.ArrayList:<init>()
M:callgraph.DynamicCallManager:<init>()[1],void,(O)java.lang.Object:<init>()
M:callgraph.DynamicCallManager:<init>()[1],void,(O)java.util.HashMap:<init>()
"M:callgraph.DynamicCallManager:retrieveCalls(org.apache.bcel.classfile.Method,org.apache.bcel.classfile.JavaClass)[15]",void,(M)org.apache.bcel.classfile.Method:isAbstract()
"M:callgraph.DynamicCallManager:retrieveCalls(org.apache.bcel.classfile.Method,org.apache.bcel.classfile.JavaClass)[15]",void,(M)org.apache.bcel.classfile.Method:isNative()
"M:callgraph.DynamicCallManager:retrieveCalls(org.apache.bcel.classfile.Method,org.apache.bcel.classfile.JavaClass)[15]",void,(M)org.apache.bcel.classfile.Method:getConstantPool()
"M:callgraph.DynamicCallManager:retrieveCalls(org.apache.bcel.classfile.Method,org.apache.bcel.classfile.JavaClass)[15]",void,(O)callgraph.DynamicCallManager:getBootstrapMethods(org.apache.bcel.classfile.JavaClass)
"M:callgraph.DynamicCallManager:retrieveCalls(org.apache.bcel.classfile.Method,org.apache.bcel.classfile.JavaClass)[15]",void,(M)org.apache.bcel.classfile.Method:getCode()
"M:callgraph.DynamicCallManager:retrieveCalls(org.apache.bcel.classfile.Method,org.apache.bcel.classfile.JavaClass)[15]",void,(M)org.apache.bcel.classfile.Code:toString()
"M:callgraph.DynamicCallManager:retrieveCalls(org.apache.bcel.classfile.Method,org.apache.bcel.classfile.JavaClass)[15]",void,(M)java.util.regex.Pattern:matcher(java.lang.CharSequence)
"M:callgraph.DynamicCallManager:retrieveCalls(org.apache.bcel.classfile.Method,org.apache.bcel.classfile.JavaClass)[15]",void,(M)java.util.regex.Matcher:find()
"M:callgraph.DynamicCallManager:retrieveCalls(org.apache.bcel.classfile.Method,org.apache.bcel.classfile.JavaClass)[15]",void,(M)java.util.regex.Matcher:group(int)
"M:callgraph.DynamicCallManager:retrieveCalls(org.apache.bcel.classfile.Method,org.apache.bcel.classfile.JavaClass)[15]",void,(S)java.lang.Integer:parseInt(java.lang.String)
"M:callgraph.DynamicCallManager:retrieveCalls(org.apache.bcel.classfile.Method,org.apache.bcel.classfile.JavaClass)[15]",void,(M)org.apache.bcel.classfile.BootstrapMethod:getBootstrapArguments()
"M:callgraph.DynamicCallManager:retrieveCalls(org.apache.bcel.classfile.Method,org.apache.bcel.classfile.JavaClass)[15]",void,"(O)callgraph.DynamicCallManager:getMethodNameFromHandleIndex(org.apache.bcel.classfile.ConstantPool,int)"
"M:callgraph.DynamicCallManager:retrieveCalls(org.apache.bcel.classfile.Method,org.apache.bcel.classfile.JavaClass)[15]",void,(M)org.apache.bcel.classfile.Method:getName()
"M:callgraph.DynamicCallManager:retrieveCalls(org.apache.bcel.classfile.Method,org.apache.bcel.classfile.JavaClass)[15]",void,(M)java.lang.String:contains(java.lang.CharSequence)
"M:callgraph.DynamicCallManager:retrieveCalls(org.apache.bcel.classfile.Method,org.apache.bcel.classfile.JavaClass)[15]",void,(M)java.lang.String:contains(java.lang.CharSequence)
"M:callgraph.DynamicCallManager:retrieveCalls(org.apache.bcel.classfile.Method,org.apache.bcel.classfile.JavaClass)[15]",void,"(I)java.util.Map:put(java.lang.Object,java.lang.Object)"
"M:callgraph.DynamicCallManager:getMethodNameFromHandleIndex(org.apache.bcel.classfile.ConstantPool,int)[3]",java.lang.String,(M)org.apache.bcel.classfile.ConstantPool:getConstant(int)
"M:callgraph.DynamicCallManager:getMethodNameFromHandleIndex(org.apache.bcel.classfile.ConstantPool,int)[3]",java.lang.String,(M)org.apache.bcel.classfile.ConstantMethodHandle:getReferenceIndex()
"M:callgraph.DynamicCallManager:getMethodNameFromHandleIndex(org.apache.bcel.classfile.ConstantPool,int)[3]",java.lang.String,(M)org.apache.bcel.classfile.ConstantPool:getConstant(int)
"M:callgraph.DynamicCallManager:getMethodNameFromHandleIndex(org.apache.bcel.classfile.ConstantPool,int)[3]",java.lang.String,(M)org.apache.bcel.classfile.ConstantCP:getNameAndTypeIndex()
"M:callgraph.DynamicCallManager:getMethodNameFromHandleIndex(org.apache.bcel.classfile.ConstantPool,int)[3]",java.lang.String,(M)org.apache.bcel.classfile.ConstantPool:getConstant(int)
"M:callgraph.DynamicCallManager:getMethodNameFromHandleIndex(org.apache.bcel.classfile.ConstantPool,int)[3]",java.lang.String,(M)org.apache.bcel.classfile.ConstantNameAndType:getName(org.apache.bcel.classfile.ConstantPool)
M:callgraph.DynamicCallManager:linkCalls(org.apache.bcel.classfile.Method)[10],void,(M)org.apache.bcel.classfile.Method:getNameIndex()
M:callgraph.DynamicCallManager:linkCalls(org.apache.bcel.classfile.Method)[10],void,(M)org.apache.bcel.classfile.Method:getConstantPool()
M:callgraph.DynamicCallManager:linkCalls(org.apache.bcel.classfile.Method)[10],void,(M)org.apache.bcel.classfile.ConstantPool:getConstant(int)
M:callgraph.DynamicCallManager:linkCalls(org.apache.bcel.classfile.Method)[10],void,(M)org.apache.bcel.classfile.ConstantUtf8:getBytes()
M:callgraph.DynamicCallManager:linkCalls(org.apache.bcel.classfile.Method)[10],void,(M)java.lang.String:contains(java.lang.CharSequence)
M:callgraph.DynamicCallManager:linkCalls(org.apache.bcel.classfile.Method)[10],void,(M)java.lang.String:contains(java.lang.CharSequence)
M:callgraph.DynamicCallManager:linkCalls(org.apache.bcel.classfile.Method)[10],void,(M)java.lang.String:contains(java.lang.CharSequence)
M:callgraph.DynamicCallManager:linkCalls(org.apache.bcel.classfile.Method)[10],void,(M)java.lang.String:matches(java.lang.String)
M:callgraph.DynamicCallManager:linkCalls(org.apache.bcel.classfile.Method)[10],void,(I)java.util.Map:get(java.lang.Object)
M:callgraph.DynamicCallManager:linkCalls(org.apache.bcel.classfile.Method)[10],void,"(M)java.lang.String:replace(java.lang.CharSequence,java.lang.CharSequence)"
M:callgraph.DynamicCallManager:linkCalls(org.apache.bcel.classfile.Method)[10],void,(O)org.apache.bcel.classfile.ConstantUtf8:<init>(java.lang.String)
M:callgraph.DynamicCallManager:linkCalls(org.apache.bcel.classfile.Method)[10],void,"(M)org.apache.bcel.classfile.ConstantPool:setConstant(int,org.apache.bcel.classfile.Constant)"
M:callgraph.DynamicCallManager:getBootstrapMethods(org.apache.bcel.classfile.JavaClass)[4],org.apache.bcel.classfile.BootstrapMethod[],(M)org.apache.bcel.classfile.JavaClass:getAttributes()
M:callgraph.DynamicCallManager:getBootstrapMethods(org.apache.bcel.classfile.JavaClass)[4],org.apache.bcel.classfile.BootstrapMethod[],(M)org.apache.bcel.classfile.BootstrapMethods:getBootstrapMethods()
M:callgraph.DynamicCallManager:<clinit>()[2],void,(S)java.util.regex.Pattern:compile(java.lang.String)
M:callgraph.JCallGraph:<init>()[0],void,(O)java.lang.Object:<init>()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(O)java.lang.StringBuilder:<init>()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.lang.StringBuilder:append(java.lang.String)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(S)java.util.Arrays:toString(java.lang.Object[])
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.lang.StringBuilder:append(java.lang.String)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.lang.StringBuilder:toString()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.io.PrintStream:println(java.lang.String)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(D)java.util.function.Function:apply()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(O)java.io.File:<init>(java.lang.String)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.io.File:exists()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(O)java.lang.StringBuilder:<init>()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.lang.StringBuilder:append(java.lang.String)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.lang.StringBuilder:append(java.lang.String)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.lang.StringBuilder:append(java.lang.String)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.lang.StringBuilder:toString()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.io.PrintStream:println(java.lang.String)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(O)java.util.jar.JarFile:<init>(java.io.File)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.util.jar.JarFile:entries()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(S)callgraph.JCallGraph:enumerationAsStream(java.util.Enumeration)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,"(D)java.util.function.Function:apply(java.lang.String[],java.util.function.Function,java.lang.String)"
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(I)java.util.stream.Stream:flatMap(java.util.function.Function)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(D)java.util.function.Function:apply()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(I)java.util.stream.Stream:map(java.util.function.Function)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(O)java.lang.StringBuilder:<init>()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(D)java.util.function.BiFunction:apply()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(D)java.util.function.BinaryOperator:apply()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,"(I)java.util.stream.Stream:reduce(java.lang.Object,java.util.function.BiFunction,java.util.function.BinaryOperator)"
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.lang.StringBuilder:toString()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(O)java.io.OutputStreamWriter:<init>(java.io.OutputStream)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(O)java.io.BufferedWriter:<init>(java.io.Writer)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.io.BufferedWriter:write(java.lang.String)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.io.BufferedWriter:close()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.util.jar.JarFile:close()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.lang.Throwable:addSuppressed(java.lang.Throwable)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.util.jar.JarFile:close()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.util.jar.JarFile:close()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.lang.Throwable:addSuppressed(java.lang.Throwable)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.util.jar.JarFile:close()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(S)callgraph.JCallGraph:createCSV(java.lang.String)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(O)java.lang.StringBuilder:<init>()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.lang.StringBuilder:append(java.lang.String)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.io.IOException:getMessage()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.lang.StringBuilder:append(java.lang.String)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.lang.StringBuilder:toString()
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.io.PrintStream:println(java.lang.String)
M:callgraph.JCallGraph:main(java.lang.String[])[23],void,(M)java.io.IOException:printStackTrace()
M:callgraph.JCallGraph:createCSV(java.lang.String)[23],void,(S)java.lang.System:getProperty(java.lang.String)
M:callgraph.JCallGraph:createCSV(java.lang.String)[23],void,(O)java.io.File:<init>(java.lang.String)
M:callgraph.JCallGraph:createCSV(java.lang.String)[23],void,(M)java.io.File:mkdir()
M:callgraph.JCallGraph:createCSV(java.lang.String)[23],void,"(S)java.nio.file.Paths:get(java.lang.String,java.lang.String[])"
M:callgraph.JCallGraph:createCSV(java.lang.String)[23],void,"(S)java.nio.file.Files:newBufferedWriter(java.nio.file.Path,java.nio.file.OpenOption[])"
M:callgraph.JCallGraph:createCSV(java.lang.String)[23],void,(M)org.apache.commons.csv.CSVFormat:withHeader(java.lang.String[])
M:callgraph.JCallGraph:createCSV(java.lang.String)[23],void,"(O)org.apache.commons.csv.CSVPrinter:<init>(java.lang.Appendable,org.apache.commons.csv.CSVFormat)"
M:callgraph.JCallGraph:createCSV(java.lang.String)[23],void,(M)java.lang.String:split(java.lang.String)
M:callgraph.JCallGraph:createCSV(java.lang.String)[23],void,(M)org.apache.commons.csv.CSVPrinter:printRecord(java.lang.Object[])
M:callgraph.JCallGraph:createCSV(java.lang.String)[23],void,(M)org.apache.commons.csv.CSVPrinter:close()
M:callgraph.JCallGraph:createCSV(java.lang.String)[23],void,(M)java.io.BufferedWriter:close()
M:callgraph.JCallGraph:createCSV(java.lang.String)[23],void,(O)java.lang.StringBuilder:<init>()
M:callgraph.JCallGraph:createCSV(java.lang.String)[23],void,(M)java.lang.StringBuilder:append(java.lang.String)
M:callgraph.JCallGraph:createCSV(java.lang.String)[23],void,(M)java.io.IOException:getMessage()
M:callgraph.JCallGraph:createCSV(java.lang.String)[23],void,(M)java.lang.StringBuilder:append(java.lang.String)
M:callgraph.JCallGraph:createCSV(java.lang.String)[23],void,(M)java.lang.StringBuilder:toString()
M:callgraph.JCallGraph:createCSV(java.lang.String)[23],void,(M)java.io.PrintStream:println(java.lang.String)
M:callgraph.JCallGraph:createCSV(java.lang.String)[23],void,(M)java.io.IOException:printStackTrace()
M:callgraph.JCallGraph:createCSV(java.lang.String)[23],void,(M)org.apache.commons.csv.CSVPrinter:close()
M:callgraph.JCallGraph:createCSV(java.lang.String)[23],void,(M)java.io.BufferedWriter:close()
M:callgraph.JCallGraph:createCSV(java.lang.String)[23],void,(M)org.apache.commons.csv.CSVPrinter:close()
M:callgraph.JCallGraph:createCSV(java.lang.String)[23],void,(M)java.io.BufferedWriter:close()
M:callgraph.JCallGraph:enumerationAsStream(java.util.Enumeration)[0],java.util.stream.Stream,(O)callgraph.JCallGraph$1:<init>(java.util.Enumeration)
M:callgraph.JCallGraph:enumerationAsStream(java.util.Enumeration)[0],java.util.stream.Stream,"(S)java.util.Spliterators:spliteratorUnknownSize(java.util.Iterator,int)"
M:callgraph.JCallGraph:enumerationAsStream(java.util.Enumeration)[0],java.util.stream.Stream,"(S)java.util.stream.StreamSupport:stream(java.util.Spliterator,boolean)"
M:callgraph.JCallGraph:lambda$main$2(java.lang.String)[0],java.lang.String,(O)java.lang.StringBuilder:<init>()
M:callgraph.JCallGraph:lambda$main$2(java.lang.String)[0],java.lang.String,(M)java.lang.StringBuilder:append(java.lang.String)
M:callgraph.JCallGraph:lambda$main$2(java.lang.String)[0],java.lang.String,(M)java.lang.StringBuilder:append(java.lang.String)
M:callgraph.JCallGraph:lambda$main$2(java.lang.String)[0],java.lang.String,(M)java.lang.StringBuilder:toString()
"M:callgraph.JCallGraph:lambda$main$1(java.lang.String[],java.util.function.Function,java.lang.String,java.util.jar.JarEntry)[5]",java.util.stream.Stream,(M)java.util.jar.JarEntry:isDirectory()
"M:callgraph.JCallGraph:lambda$main$1(java.lang.String[],java.util.function.Function,java.lang.String,java.util.jar.JarEntry)[5]",java.util.stream.Stream,(M)java.util.jar.JarEntry:getName()
"M:callgraph.JCallGraph:lambda$main$1(java.lang.String[],java.util.function.Function,java.lang.String,java.util.jar.JarEntry)[5]",java.util.stream.Stream,(M)java.lang.String:endsWith(java.lang.String)
"M:callgraph.JCallGraph:lambda$main$1(java.lang.String[],java.util.function.Function,java.lang.String,java.util.jar.JarEntry)[5]",java.util.stream.Stream,(O)java.util.ArrayList:<init>()
"M:callgraph.JCallGraph:lambda$main$1(java.lang.String[],java.util.function.Function,java.lang.String,java.util.jar.JarEntry)[5]",java.util.stream.Stream,(M)java.util.ArrayList:stream()
"M:callgraph.JCallGraph:lambda$main$1(java.lang.String[],java.util.function.Function,java.lang.String,java.util.jar.JarEntry)[5]",java.util.stream.Stream,(M)java.util.jar.JarEntry:getName()
"M:callgraph.JCallGraph:lambda$main$1(java.lang.String[],java.util.function.Function,java.lang.String,java.util.jar.JarEntry)[5]",java.util.stream.Stream,"(O)org.apache.bcel.classfile.ClassParser:<init>(java.lang.String,java.lang.String)"
"M:callgraph.JCallGraph:lambda$main$1(java.lang.String[],java.util.function.Function,java.lang.String,java.util.jar.JarEntry)[5]",java.util.stream.Stream,(I)java.util.function.Function:apply(java.lang.Object)
"M:callgraph.JCallGraph:lambda$main$1(java.lang.String[],java.util.function.Function,java.lang.String,java.util.jar.JarEntry)[5]",java.util.stream.Stream,(M)callgraph.ClassVisitor:getPackage()
"M:callgraph.JCallGraph:lambda$main$1(java.lang.String[],java.util.function.Function,java.lang.String,java.util.jar.JarEntry)[5]",java.util.stream.Stream,(M)java.lang.String:equals(java.lang.Object)
"M:callgraph.JCallGraph:lambda$main$1(java.lang.String[],java.util.function.Function,java.lang.String,java.util.jar.JarEntry)[5]",java.util.stream.Stream,(I)java.util.function.Function:apply(java.lang.Object)
"M:callgraph.JCallGraph:lambda$main$1(java.lang.String[],java.util.function.Function,java.lang.String,java.util.jar.JarEntry)[5]",java.util.stream.Stream,(M)callgraph.ClassVisitor:start()
"M:callgraph.JCallGraph:lambda$main$1(java.lang.String[],java.util.function.Function,java.lang.String,java.util.jar.JarEntry)[5]",java.util.stream.Stream,(M)callgraph.ClassVisitor:methodCalls()
"M:callgraph.JCallGraph:lambda$main$1(java.lang.String[],java.util.function.Function,java.lang.String,java.util.jar.JarEntry)[5]",java.util.stream.Stream,(I)java.util.List:stream()
M:callgraph.JCallGraph:lambda$main$0(org.apache.bcel.classfile.ClassParser)[2],callgraph.ClassVisitor,(M)org.apache.bcel.classfile.ClassParser:parse()
M:callgraph.JCallGraph:lambda$main$0(org.apache.bcel.classfile.ClassParser)[2],callgraph.ClassVisitor,(O)callgraph.ClassVisitor:<init>(org.apache.bcel.classfile.JavaClass)
M:callgraph.JCallGraph:lambda$main$0(org.apache.bcel.classfile.ClassParser)[2],callgraph.ClassVisitor,(O)java.io.UncheckedIOException:<init>(java.io.IOException)
M:callgraph.ClassVisitor:<init>(org.apache.bcel.classfile.JavaClass)[6],void,(O)org.apache.bcel.classfile.EmptyVisitor:<init>()
M:callgraph.ClassVisitor:<init>(org.apache.bcel.classfile.JavaClass)[6],void,(O)callgraph.DynamicCallManager:<init>()
M:callgraph.ClassVisitor:<init>(org.apache.bcel.classfile.JavaClass)[6],void,(O)java.util.ArrayList:<init>()
M:callgraph.ClassVisitor:<init>(org.apache.bcel.classfile.JavaClass)[6],void,(M)org.apache.bcel.classfile.JavaClass:getConstantPool()
M:callgraph.ClassVisitor:<init>(org.apache.bcel.classfile.JavaClass)[6],void,(O)org.apache.bcel.generic.ConstantPoolGen:<init>(org.apache.bcel.classfile.ConstantPool)
M:callgraph.ClassVisitor:<init>(org.apache.bcel.classfile.JavaClass)[6],void,(O)java.lang.StringBuilder:<init>()
M:callgraph.ClassVisitor:<init>(org.apache.bcel.classfile.JavaClass)[6],void,(M)java.lang.StringBuilder:append(java.lang.String)
M:callgraph.ClassVisitor:<init>(org.apache.bcel.classfile.JavaClass)[6],void,(M)org.apache.bcel.classfile.JavaClass:getClassName()
M:callgraph.ClassVisitor:<init>(org.apache.bcel.classfile.JavaClass)[6],void,(M)java.lang.StringBuilder:append(java.lang.String)
M:callgraph.ClassVisitor:<init>(org.apache.bcel.classfile.JavaClass)[6],void,(M)java.lang.StringBuilder:append(java.lang.String)
M:callgraph.ClassVisitor:<init>(org.apache.bcel.classfile.JavaClass)[6],void,(M)java.lang.StringBuilder:toString()
M:callgraph.ClassVisitor:visitJavaClass(org.apache.bcel.classfile.JavaClass)[10],void,(M)org.apache.bcel.classfile.JavaClass:getConstantPool()
M:callgraph.ClassVisitor:visitJavaClass(org.apache.bcel.classfile.JavaClass)[10],void,(M)org.apache.bcel.classfile.ConstantPool:accept(org.apache.bcel.classfile.Visitor)
M:callgraph.ClassVisitor:visitJavaClass(org.apache.bcel.classfile.JavaClass)[10],void,(M)org.apache.bcel.classfile.JavaClass:getMethods()
M:callgraph.ClassVisitor:visitJavaClass(org.apache.bcel.classfile.JavaClass)[10],void,(M)org.apache.bcel.classfile.Method:getConstantPool()
M:callgraph.ClassVisitor:visitJavaClass(org.apache.bcel.classfile.JavaClass)[10],void,(M)org.apache.bcel.classfile.ConstantPool:getConstant(int)
M:callgraph.ClassVisitor:visitJavaClass(org.apache.bcel.classfile.JavaClass)[10],void,(M)org.apache.bcel.classfile.Constant:toString()
M:callgraph.ClassVisitor:visitJavaClass(org.apache.bcel.classfile.JavaClass)[10],void,(M)java.lang.String:contains(java.lang.CharSequence)
M:callgraph.ClassVisitor:visitJavaClass(org.apache.bcel.classfile.JavaClass)[10],void,(M)org.apache.bcel.classfile.Method:getName()
M:callgraph.ClassVisitor:visitJavaClass(org.apache.bcel.classfile.JavaClass)[10],void,(M)java.lang.String:contains(java.lang.CharSequence)
M:callgraph.ClassVisitor:visitJavaClass(org.apache.bcel.classfile.JavaClass)[10],void,"(M)callgraph.DynamicCallManager:retrieveCalls(org.apache.bcel.classfile.Method,org.apache.bcel.classfile.JavaClass)"
M:callgraph.ClassVisitor:visitJavaClass(org.apache.bcel.classfile.JavaClass)[10],void,(M)callgraph.DynamicCallManager:linkCalls(org.apache.bcel.classfile.Method)
M:callgraph.ClassVisitor:visitJavaClass(org.apache.bcel.classfile.JavaClass)[10],void,(M)org.apache.bcel.classfile.Method:accept(org.apache.bcel.classfile.Visitor)
M:callgraph.ClassVisitor:visitJavaClass(org.apache.bcel.classfile.JavaClass)[10],void,(M)callgraph.DynamicCallManager:getDynamicCallers()
M:callgraph.ClassVisitor:visitJavaClass(org.apache.bcel.classfile.JavaClass)[10],void,(M)java.lang.Object:toString()
M:callgraph.ClassVisitor:visitJavaClass(org.apache.bcel.classfile.JavaClass)[10],void,(M)java.io.PrintStream:println(java.lang.String)
M:callgraph.ClassVisitor:visitConstantPool(org.apache.bcel.classfile.ConstantPool)[9],void,(M)org.apache.bcel.classfile.ConstantPool:getLength()
M:callgraph.ClassVisitor:visitConstantPool(org.apache.bcel.classfile.ConstantPool)[9],void,(M)org.apache.bcel.classfile.ConstantPool:getConstant(int)
M:callgraph.ClassVisitor:visitConstantPool(org.apache.bcel.classfile.ConstantPool)[9],void,(M)org.apache.bcel.classfile.Constant:getTag()
M:callgraph.ClassVisitor:visitConstantPool(org.apache.bcel.classfile.ConstantPool)[9],void,(M)org.apache.bcel.classfile.ConstantPool:constantToString(org.apache.bcel.classfile.Constant)
M:callgraph.ClassVisitor:visitConstantPool(org.apache.bcel.classfile.ConstantPool)[9],void,"(S)java.lang.String:format(java.lang.String,java.lang.Object[])"
M:callgraph.ClassVisitor:visitConstantPool(org.apache.bcel.classfile.ConstantPool)[9],void,(M)java.io.PrintStream:println(java.lang.String)
M:callgraph.ClassVisitor:visitMethod(org.apache.bcel.classfile.Method)[3],void,(M)org.apache.bcel.classfile.JavaClass:getClassName()
M:callgraph.ClassVisitor:visitMethod(org.apache.bcel.classfile.Method)[3],void,"(O)org.apache.bcel.generic.MethodGen:<init>(org.apache.bcel.classfile.Method,java.lang.String,org.apache.bcel.generic.ConstantPoolGen)"
M:callgraph.ClassVisitor:visitMethod(org.apache.bcel.classfile.Method)[3],void,"(O)callgraph.MethodVisitor:<init>(org.apache.bcel.generic.MethodGen,org.apache.bcel.classfile.JavaClass)"
M:callgraph.ClassVisitor:visitMethod(org.apache.bcel.classfile.Method)[3],void,(M)callgraph.MethodVisitor:start()
M:callgraph.ClassVisitor:visitMethod(org.apache.bcel.classfile.Method)[3],void,(I)java.util.List:addAll(java.util.Collection)
M:callgraph.ClassVisitor:start()[1],callgraph.ClassVisitor,(M)callgraph.ClassVisitor:visitJavaClass(org.apache.bcel.classfile.JavaClass)
M:callgraph.ClassVisitor:getPackage()[0],java.lang.String,(M)org.apache.bcel.classfile.JavaClass:getPackageName()
M:callgraph.JCallGraph$1:<init>(java.util.Enumeration)[0],void,(O)java.lang.Object:<init>()
M:callgraph.JCallGraph$1:next()[0],java.lang.Object,(I)java.util.Enumeration:nextElement()
M:callgraph.JCallGraph$1:hasNext()[0],boolean,(I)java.util.Enumeration:hasMoreElements()

@startuml components


package callgraph {

    class CalledFromList #TECHNOLOGY {
    }

    class ClassVisitor #AliceBlue { 
    }

' extends EmptyVisitor
    class CliManager #TECHNOLOGY {

    }

    class DynamicCallManager  {
    }

    class Instrumenter {
    }

    class JCallGraph #AliceBlue {
    }

    class MethodCallsList #TECHNOLOGY {
    }

    class MethodReport #TECHNOLOGY {
    }

    class MethodVisitor #AliceBlue {
    }
    package exporters {
        interface IExporter #TECHNOLOGY {
            }

        class CSVExporter #TECHNOLOGY implements IExporter {
            }
        class ExportFactory #TECHNOLOGY {}
    }
}


package com.github.mauricioaniche.ck {
    package util {}
    package metric {}

    class CK {}
    class CKClassResult {}
    class CKMethodResult {}
    class CKNotifier {}
    class CKVisitor {}
    class MetricsExecutor {}
    class ResultWriter #AliceBlue {}
    class Runner #AliceBlue {}
}

package org.apache.bcel <<Node>> {
    class Constant {}
    class JavaClass {}
    class ConstantPoolGen {}
    class MethodGen {}
    class ConstantPool {}
    class EmptyVisitor {}
    class ClassParser {}
    class Method {}
}

package org.eclipse.jdt.core <<Node>> {

}

/' JCG '/

ClassVisitor -left-> DynamicCallManager
ClassVisitor -> MethodVisitor
ClassVisitor -> org.apache.bcel


JCallGraph -> ClassVisitor
JCallGraph -up-> MethodCallsList
JCallGraph -up-> CalledFromList
JCallGraph -> Instrumenter
JCallGraph -down-> Runner
JCallGraph -up-> ExportFactory
JCallGraph -left-> CliManager

MethodCallsList -up-> MethodReport

MethodVisitor -down-> CalledFromList
MethodVisitor -> org.apache.bcel

DynamicCallManager -> org.apache.bcel

ExportFactory -> IExporter

/' CK '/

com.github.mauricioaniche.ck -down-> org.eclipse.jdt.core

Runner -right-> CK
Runner -> ResultWriter

CKVisitor -> CKClassResult
CKVisitor -up-> util
ResultWriter -> CKClassResult
metric -down-> CKClassResult

CKVisitor -> CKMethodResult
ResultWriter -> CKMethodResult
metric -down-> CKMethodResult
CKClassResult -down-> CKMethodResult

MetricsExecutor -down-> CKNotifier

MetricsExecutor -down-> CKVisitor

CK -down-> MetricsExecutor
CK -> util

metric -> util

legend right
    | Color | Tipo |
    |<#TECHNOLOGY>| Propio|
    |<#FEFECE>| Original |
    |<#AliceBlue>| Hibrido |
endlegend

@enduml


